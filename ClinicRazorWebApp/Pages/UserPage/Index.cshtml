@page
@using ClinicData.Models
@model ClinicRazorWebApp.Pages.UserPage.IndexModel

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <style>
        body {
            font-family: Arial, sans-serif;           
            background-color: #ffffff;
            margin: 20px;
            padding: 20px;
        }

        h1 {
            text-align: center;
            margin-top: 0px; /* Thêm khoảng cách phía trên tiêu đề */
            color: black; /* Màu chữ cho tiêu đề */
            text-shadow: 2px 2px 4px #ffffff; /* Đổ bóng cho chữ */
        }

        .form-container {
            display: flex;
            justify-content: center;
            margin-bottom: 20px;
        }

            .form-container form {
                display: flex;
                align-items: center;
                gap: 10px;
            }

            .form-container label {
                margin-right: 5px;
            }

            .form-container button {
                background-color: #28a745;
                color: white;
                padding: 10px;
                border: none;
                border-radius: 5px;
            }

        .create-new-link {
            display: block;
            background-color: #006400;
            color: white;
            padding: 10px;
            text-decoration: none;
            border-radius: 5px;
            margin-top: 10px;
            text-align: center;
        }

        .table-container {
            max-width: 110%;
            overflow-x: auto;
        }

        .table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

            .table th, .table td {
                border: 1px solid #dddddd;
                padding: 8px;
                text-align: left;
            }

            .table th {
                background-color: #4CAF50; /* Màu nền đặc biệt cho hàng tiêu đề */
                color: white; /* Màu chữ cho hàng tiêu đề */
            }

            .table tr:nth-child(even) {
                background-color: #f9f9f9;
            }

            .table tr:hover {
                background-color: #f1f1f1;
            }
        /* Định dạng cho ô tick */
        .checkbox-custom {
            width: 20px;
            height: 20px;
            background-color: transparent;
            border: 2px solid #007bff; /* Màu viền */
            border-radius: 3px;
            position: relative;
            display: inline-block;
            vertical-align: middle;
        }

            .checkbox-custom.checked {
                background-color: #007bff; /* Màu nền khi checked */
            }

                .checkbox-custom.checked::after {
                    content: '\2713'; /* Dấu tick */
                    font-size: 16px;
                    color: white; /* Màu của dấu tick */
                    position: absolute;
                    top: 50%;
                    left: 50%;
                    transform: translate(-50%, -50%);
                }

            /* Định dạng cho ô tick inactive */
            .checkbox-custom.inactive {
                background-color: #6c757d; /* Màu nền khi inactive */
            }

                .checkbox-custom.inactive::after {
                    content: '\2715'; /* Dấu X */
                    font-size: 16px;
                    color: white; /* Màu của dấu X */
                    position: absolute;
                    top: 50%;
                    left: 50%;
                    transform: translate(-50%, -50%);
                }

        .table-custom tbody tr:nth-child(odd) {
            background-color: #f2f2f2;
        }

        .table-custom tbody tr:nth-child(even) {
            background-color: #ffffff;
        }

        /* Định dạng cho phần tìm kiếm */
        .header-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-bottom: 20px;
        }

        .search-container {
            background-color: #4CAF50;
            padding: 10px;
            border-radius: 5px;
            margin-bottom: 10px;
            box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
            display: flex;
            align-items: center;
            gap: 10px;
            max-width: 600px; /* Đặt giới hạn chiều rộng cho form */
            width: 100%; /* Chiếm toàn bộ chiều rộng của container */
            justify-content: center; /* Căn giữa nội dung của search container */
        }

            .search-container label {
                margin-right: 10px;
                color: white; /* Màu chữ cho label */
            }

            .search-container input[type="text"],
            .search-container select {
                padding: 5px;
                border-radius: 3px;
                border: 1px solid #ccc;
            }

            .search-container button {
                background-color: #007bff;
                color: white;
                border: none;
                border-radius: 3px;
                padding: 5px 10px;
                cursor: pointer;
            }

        .password-container {
            display: flex;
            align-items: center;
        }

            .password-container input {
                width: 100px; /* Set the width of the password input field */
                flex: none;
            }

        .toggle-password {
            cursor: pointer;
            margin-left: 5px;
            color: #007bff;
            user-select: none;
        }

        .username-column {
            width: 100px; /* Adjust the width as needed */
        }

        .email-column {
            width: 200px; /* Adjust the width as needed */
        }

        .fullname-column {
            width: 200px
        }
    </style>
</head>
<body>
<div class="header-container">
<h1>User Management Page</h1>

    <div class="search-container">
    <form method="get" style="display: flex; align-items: center; gap: 10px;">
        <div>
            <label for="search">Search:</label>
            <input type="text" id="search" name="searchTerm" value="@Model.SearchTerm" />
        </div>
        <div>
            <label for="searchField">in</label>
            <select id="searchField" name="searchField">
                <option value="Fullname">Fullname</option>
                <option value="Role">RoleName</option>
                <option value="Email">Email</option>
                <option value="Phone">Phone</option>
                <option value="Username">Username</option>
                <option value="Address">Address</option>
                <option value="Birthday">Birthday</option>
                <option value="IsActive">IsActive</option>
            </select>
        </div>
        <div>
                <button type="submit" style="background-color: #ff8c00; color: white; padding: 10px; border: none; border-radius: 5px;">Search</button>
        </div>
    </form>
</div>
</div>

<p>
    <a asp-page="Create" style="background-color: #006400; color: white; padding: 10px; text-decoration: none; border-radius: 5px;">Create New</a>
</p>
    
<table class="table table-custom">
    <thead>
        <tr>
            <th class="username-column">
                @Html.DisplayNameFor(model => model.User[0].Username)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User[0].Password)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User[0].IsActive)
            </th>
            <th class="fullname-column">
                @Html.DisplayNameFor(model => model.User[0].Role.RoleName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User[0].Fullname)
            </th>
            <th class="email-column">
                @Html.DisplayNameFor(model => model.User[0].Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User[0].Phone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User[0].Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.User[0].Birthday)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.User != null && Model.User.Count > 0)
        {
            foreach (var item in Model.User)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Username)
                    </td>
                        <td>
                            <div class="password-container">
                                <input type="password" value="@item.Password" readonly />
                                <span class="toggle-password" onclick="togglePasswordVisibility(this)">👁️</span>
                            </div>
                        </td>
                    <td style="text-align: center;">
                        <div class="checkbox-custom @(item.IsActive ? "checked" : "inactive")"></div>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Role.RoleName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Fullname)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Phone)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Address)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Birthday)
                    </td>
                    <td>
                        <div style="display: flex; gap: 5px;">
                            <a asp-page="./Edit" asp-route-id="@item.UserId" style="background-color: #ffc107; color: white; padding: 5px; text-decoration: none; border-radius: 5px;">Edit</a>
                            <a asp-page="./Details" asp-route-id="@item.UserId" style="background-color: #17a2b8; color: white; padding: 5px; text-decoration: none; border-radius: 5px;">Details</a>
                            <a asp-page="./Delete" asp-route-id="@item.UserId" style="background-color: #dc3545; color: white; padding: 5px; text-decoration: none; border-radius: 5px;">Delete</a>
                        </div>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr style="background-color: #f8d7da; color: #721c24;">
                <td colspan="10">No users found.</td>
            </tr>
        }
    </tbody>
</table>

    <script>
        function togglePasswordVisibility(element) {
            var input = element.previousElementSibling;
            if (input.type === "password") {
                input.type = "text";
                element.textContent = "🙈";
            } else {
                input.type = "password";
                element.textContent = "👁️";
            }
        }
    </script>
</body>
@if (Model.TotalPages > 1)
{
    <div style="text-align: center;">
        <nav aria-label="Page navigation example">
            <ul class="pagination">
                @if (Model.PageIndex > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="?pageIndex=@(Model.PageIndex - 1)&searchTerm=@Model.SearchTerm&searchField=@Model.SearchField" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                }
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.PageIndex ? "active" : "")">
                        <a class="page-link" href="?pageIndex=@i&searchTerm=@Model.SearchTerm&searchField=@Model.SearchField">@i</a>
                    </li>
                }
                @if (Model.PageIndex < Model.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="?pageIndex=@(Model.PageIndex + 1)&searchTerm=@Model.SearchTerm&searchField=@Model.SearchField" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                }
            </ul>
        </nav>
    </div>
}
</html>